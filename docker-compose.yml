version: "3.9"

services:

  # üü¶ PostgreSQL para SonarQube
  sonarqube-db:
    image: postgres:15
    container_name: sonarqube-db
    restart: always
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 5s
      timeout: 5s
      retries: 10

  # üü• SonarQube
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      sonarqube-db:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
      SONARQUBE_JAVA_OPTS: "-Xms512m -Xmx2g"
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9000/api/system/status | grep -q UP"]
      interval: 10s
      timeout: 5s
      retries: 20

  # üåê Eureka Server
  eureka:
    build: ./eureka-server
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      - microservices-net

  # üö™ API Gateway
  gateway:
    build: ./gateway
    container_name: gateway
    depends_on:
      - eureka
    ports:
      - "8080:8080"
    volumes:
      - ./gateway/src/main/resources/keys:/app/keys
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - JWT_PUBLIC_KEY_PATH=file:/app/keys/public.pem
    networks:
      - microservices-net

  # üë§ Account Service
  account-service:
    build: ./account-service
    container_name: account-service
    depends_on:
      - eureka
    ports:
      - "8081:8081"
    volumes:
      - ./account-service/src/main/resources/keys:/app/keys
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - JWT_PRIVATE_KEY_PATH=file:/app/keys/private.pem
      - JWT_TTL_SECONDS=3600
    networks:
      - microservices-net

  # üì¶ Product Service
  product-service:
    build: ./product-service
    container_name: product-service
    depends_on:
      - eureka
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
    networks:
      - microservices-net

  # üõç Sales Service
  sales-service:
    build: ./sales-service
    container_name: sales-service
    depends_on:
      - eureka
    ports:
      - "8083:8083"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  sonarqube_db:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
